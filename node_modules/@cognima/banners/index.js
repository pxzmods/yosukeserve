"use strict";

/**
 * @cognima/banners
 * 
 * Módulo para criação de banners para diversas plataformas e finalidades.
 * 
 * @module @cognima/banners
 * @author Cognima Team (melhorado)
 * @version 3.0.0
 */

// Importa os módulos principais
const welcomeLeave = require('./src/welcome-leave');
const discordProfile = require('./src/discord-profile');
const gradientWelcome = require('./src/gradient-welcome');
const whatsappStatus = require('./src/whatsapp-status');
const instagramPost = require('./src/instagram-post');
const youtubeThumbnail = require('./src/youtube-thumbnail');
const tiktokPost = require('./src/tiktok-post');
const linkedinPost = require('./src/linkedin-post');
const facebookPost = require('./src/facebook-post');
const eventBanner = require('./src/event-banner');
const marketingBanner = require('./src/marketing-banner');
const ecommerceBanner = require('./src/e-commerce-banner');
const communityBanner = require('./src/community-banner');
const modernProfile = require('./src/modern-profile');
const minimalistBanner = require('./src/minimalist-banner');
const telegramHeader = require('./src/telegram-header');
const twitterHeader = require('./src/twitter-header');

// Importa os módulos de utilidades
const utils = require('./utils');
const effects = require('./src/effects');
const imageFilters = require('./src/image-filters');
const imageProcessor = require('./src/image-processor');
const animationEffects = require('./src/animation-effects');
const interactiveElements = require('./src/interactive-elements');
const constants = require('./src/constants');
const validator = require('./src/validator');
const cacheManager = require('./src/cache-manager');
const performanceOptimizer = require('./src/performance-optimizer');
const errorHandler = require('./src/error-handler');

/**
 * Classe principal do módulo
 */
class CognimaBanners {
    constructor() {
        // Inicializa as classes
        this.welcomeLeave = welcomeLeave;
        this.discordProfile = discordProfile;
        this.gradientWelcome = gradientWelcome;
        this.whatsappStatus = whatsappStatus;
        this.instagramPost = instagramPost;
        this.youtubeThumbnail = youtubeThumbnail;
        this.tiktokPost = tiktokPost;
        this.linkedinPost = linkedinPost;
        this.facebookPost = facebookPost;
        this.eventBanner = eventBanner;
        this.marketingBanner = marketingBanner;
        this.ecommerceBanner = ecommerceBanner;
        this.communityBanner = communityBanner;
        this.modernProfile = modernProfile;
        this.minimalistBanner = minimalistBanner;
        this.telegramHeader = telegramHeader;
        this.twitterHeader = twitterHeader;
        
        // Adiciona as utilidades
        this.utils = utils;
        this.effects = effects;
        this.imageFilters = imageFilters;
        this.imageProcessor = imageProcessor;
        this.animationEffects = animationEffects;
        this.interactiveElements = interactiveElements;
        this.constants = constants;
        this.validator = validator;
        this.cacheManager = cacheManager;
        this.performanceOptimizer = performanceOptimizer;
        this.errorHandler = errorHandler;

    }
    
    /**
     * Configura opções globais para o módulo
     * 
     * @param {Object} options - Opções globais
     * @param {boolean} [options.useCache=true] - Se deve usar cache
     * @param {boolean} [options.optimizePerformance=true] - Se deve otimizar performance
     * @param {boolean} [options.debug=false] - Se deve mostrar mensagens de debug
     * @returns {CognimaBanners} - A instância atual para encadeamento
     */
    configure(options) {
        if (options.useCache !== undefined) {
            this.cacheManager.setEnabled(options.useCache);
        }
        
        if (options.optimizePerformance !== undefined) {
            this.performanceOptimizer.setEnabled(options.optimizePerformance);
        }
        
        if (options.debug !== undefined) {
            this.errorHandler.setDebug(options.debug);
        }
        
        return this;
    }
    
    /**
     * Limpa o cache
     * 
     * @returns {CognimaBanners} - A instância atual para encadeamento
     */
    clearCache() {
        this.cacheManager.clearCache();
        return this;
    }
    
    /**
     * Obtém a versão do módulo
     * 
     * @returns {string} - Versão do módulo
     */
    getVersion() {
        return '3.0.0';
    }
    
    /**
     * Obtém informações sobre o módulo
     * 
     * @returns {Object} - Informações sobre o módulo
     */
    getInfo() {
        return {
            name: '@cognima/banners',
            version: this.getVersion(),
            author: 'Cognima Team',
            description: 'Módulo para criação de banners para diversas plataformas e finalidades.',
            bannerTypes: [
                'welcome', 'leave', 'discord-profile', 'whatsapp-status',
                'instagram-post', 'youtube-thumbnail', 'tiktok-post',
                'linkedin-post', 'facebook-post', 'event', 'advertisement',
                'landing-page', 'product', 'promotion', 'announcement',
                'quote', 'poll', 'modern-profile', 'minimalist',
                'telegram-header', 'twitter-header'
            ]
        };
    }
}

// Exporta a instância principal
module.exports = new CognimaBanners();

